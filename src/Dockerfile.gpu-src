# This is a sample Dockerfile you can modify to deploy your own app based on face_recognition

FROM nvidia/cuda:8.0-devel-ubuntu16.04
#FROM kuberlab/tensorflow:gpu-36-1.5.0-full

RUN apt-get -y update && apt-get install -y --fix-missing \
    build-essential \
    cmake \
    gfortran \
    git \
    wget \
    curl \
    graphicsmagick \
    libgraphicsmagick1-dev \
    libatlas-dev \
    libatlas-base-dev \
    libavcodec-dev \
    libavformat-dev \
    libgtk-3-dev \
    libjpeg-dev \
    liblapack-dev \
    libswscale-dev \
    libv4l-dev \
    libhdf5-serial-dev \
    libjasper-dev \
    libavresample-dev \
    libgphoto2-dev \
    libdc1394-22 \
    ffmpeg \
    libtbb2 \
    libtbb-dev \
    python3-dev \
    pkg-config \
    software-properties-common \
    zip \
    qt5-default \
    && apt-get clean && rm -rf /tmp/* /var/tmp/*

RUN apt-get update && apt-get install -y --no-install-recommends \
        cuda-command-line-tools-8-0 \
        cuda-cublas-dev-8-0 \
        cuda-cudart-dev-8-0 \
        cuda-cufft-dev-8-0 \
        cuda-curand-dev-8-0 \
        cuda-cusolver-dev-8-0 \
        cuda-cusparse-dev-8-0 \
        && \
    rm -rf /var/lib/apt/lists/* && \
    find /usr/local/cuda-8.0/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \
    rm /usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a

RUN cp /usr/bin/python3 /usr/bin/python
RUN cd ~ && \
    mkdir -p dlib && \
    git clone -b 'v19.9' --single-branch https://github.com/davisking/dlib.git dlib/ && \
    cd  dlib/ && \
    python3 setup.py install --yes USE_AVX_INSTRUCTIONS


# git clone -b '3.4.1' --single-branch https://github.com/opencv/opencv.git
COPY ./opencv /opencv
RUN cd /opencv && \
  mkdir -p build && cd build && \
  cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D PYTHON_EXECUTABLE=$(which python3.5) \
      -D PYTHON_INCLUDE_DIR=$(python3.5 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
      -D PYTHON_PACKAGES_PATH=$(python3.5 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") \
      -D WITH_CUDA=ON \
      -D WITH_CUBLAS=ON \
      -D WITH_GTK=ON \
      -D CUDA_NVCC_FLAGS="-D_FORCE_INLINES --expt-relaxed-constexpr" \
      -D INSTALL_C_EXAMPLES=OFF \
      -D ENABLE_FAST_MATH=1 \
      -D CUDA_FAST_MATH=1 \
      -D WITH_TBB=ON \
      -D WITH_EIGEN=ON \
      -D WITH_V4L=ON \
      -D WITH_QT=ON \
      -D WITH_OPENGL=ON \
      -D BUILD_TESTS=OFF \
      -D BUILD_PERF_TESTS=OFF .. && \
  make -j8 && make install && \
  echo "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/opencv.conf && \
  ldconfig && \
  cp /opencv/build/lib/cv2.so /usr/local/lib/python3.5/dist-packages/ && \
  cd / && rm -rf opencv

RUN pip install numpy Pillow 'scipy>=0.17.0' 'Click>=6.0' tensorflow jupyter
#COPY jupyter_notebook_config_py3.py /root/.jupyter/jupyter_notebook_config.py
#
#RUN pip --no-cache-dir install jupyter_contrib_nbextensions
#RUN jupyter contrib nbextension install --system
#RUN pip --no-cache-dir install jupyter_nbextensions_configurator
#RUN jupyter nbextensions_configurator enable --system
#WORKDIR /notebooks
#
#
## IPython
#EXPOSE 8888
#
#CMD ["/run_jupyter.sh","--allow-root"]

# The rest of this file just runs an example script.

# If you wanted to use this Dockerfile to run your own app instead, maybe you would do this:
# COPY . /root/your_app_or_whatever
# RUN cd /root/your_app_or_whatever && \
#     pip3 install -r requirements.txt
# RUN whatever_command_you_run_to_start_your_app

#COPY . /root/face_recognition
#RUN cd /root/face_recognition && \
#    pip3 install -r requirements.txt && \
#    python3 setup.py install
#
#CMD cd /root/face_recognition/examples && \
#    python3 recognize_faces_in_pictures.py
