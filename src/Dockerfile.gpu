# This is a sample Dockerfile you can modify to deploy your own app based on face_recognition

#FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04
FROM kuberlab/mlbase:gpu-36-cuda8.0-full

RUN apt-get -y update && apt-get install -y --fix-missing \
    build-essential \
    cmake \
    gfortran \
    git \
    wget \
    curl \
    graphicsmagick \
    libgraphicsmagick1-dev \
    libatlas-dev \
    libatlas-base-dev \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libeigen3-dev \
    libgtk2.0-dev \
    libjpeg-dev \
    liblapack-dev \
    libswscale-dev \
    libv4l-dev \
    libhdf5-serial-dev \
    libjasper-dev \
    libavresample-dev \
    libgphoto2-dev \
    libdc1394-22-dev \
    ffmpeg \
    libtbb2 \
    libtbb-dev \
    pkg-config \
    software-properties-common \
    zip \
    qt5-default \
    python3-dev \
    python3-pip \
    python3-tk python3-lxml python3-six \
    && apt-get clean && rm -rf /tmp/* /var/tmp/*

#RUN apt-get update && apt-get install -y --no-install-recommends \
#        cuda-command-line-tools-8-0 \
#        cuda-cublas-dev-8-0 \
#        cuda-cudart-dev-8-0 \
#        cuda-cufft-dev-8-0 \
#        cuda-curand-dev-8-0 \
#        cuda-cusolver-dev-8-0 \
#        cuda-cusparse-dev-8-0 \
#        && \
#    rm -rf /var/lib/apt/lists/*

RUN cd ~ && \
    mkdir -p dlib && \
    git clone -b 'v19.9' --single-branch https://github.com/davisking/dlib.git dlib/ && \
    cd  dlib/ && \
    python3 setup.py install --yes USE_AVX_INSTRUCTIONS

RUN conda remove opencv3 --yes --force
RUN pip install numpy Pillow 'scipy>=0.17.0' 'Click>=6.0'

# BUILD openCV 3.4.1
# Takes about 1 hour on i7-8550U (8 Threads)
RUN cd / && wget https://github.com/opencv/opencv/archive/3.4.1.zip -O opencv.zip -nv && \
  unzip opencv.zip && \
  mv /opencv-3.4.1 /opencv && \
  cd /opencv && \
  rm /opencv.zip && \
  mkdir -p build && cd build && \
  cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D WITH_TBB=ON \
    -D WITH_FFMPEG=OFF \
    -D WITH_V4L=ON \
    -D WITH_QT=OFF \
    -D WITH_OPENGL=ON \
    -D PYTHON3_LIBRARY=/opt/conda/lib/libpython3.6m.so \
    -D PYTHON3_INCLUDE_DIR=/opt/conda/include/python3.6m/ \
    -D PYTHON_LIBRARY=/opt/conda/lib/libpython3.6m.so \
    -D PYTHON_INCLUDE_DIR=/opt/conda/include/python3.6m/ \
    -D BUILD_PNG=TRUE .. && \
  make -j8 && make install && \
  echo "/usr/local/lib/python3.6/site-packages" > /etc/ld.so.conf.d/opencv.conf && \
  ldconfig && \
  cp /usr/local/lib/python3.6/site-packages/cv2.cpython-36m-x86_64-linux-gnu.so /opt/conda/lib/python3.6/site-packages/ && \
  cd / && rm -rf opencv

#RUN cp /usr/bin/python3 /usr/bin/python
#COPY jupyter_notebook_config_py3.py /root/.jupyter/jupyter_notebook_config.py
#
#RUN pip --no-cache-dir install jupyter_contrib_nbextensions
#RUN jupyter contrib nbextension install --system
#RUN pip --no-cache-dir install jupyter_nbextensions_configurator
#RUN jupyter nbextensions_configurator enable --system
#WORKDIR /notebooks
#
#
## IPython
#EXPOSE 8888
#
#CMD ["/run_jupyter.sh","--allow-root"]

# The rest of this file just runs an example script.

# If you wanted to use this Dockerfile to run your own app instead, maybe you would do this:
# COPY . /root/your_app_or_whatever
# RUN cd /root/your_app_or_whatever && \
#     pip3 install -r requirements.txt
# RUN whatever_command_you_run_to_start_your_app

#COPY . /root/face_recognition
#RUN cd /root/face_recognition && \
#    pip3 install -r requirements.txt && \
#    python3 setup.py install
#
#CMD cd /root/face_recognition/examples && \
#    python3 recognize_faces_in_pictures.py
